// <auto-generated />
using System;
using CRUDApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRUDApi.Migrations
{
    [DbContext(typeof(IndeedJobsContext))]
    [Migration("20230727123005_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CRUDApi.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CompanyLogoUrl")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "company_logo_url");

                    b.Property<string>("CompanyName")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "company_name");

                    b.Property<string>("CompanyRating")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "company_rating");

                    b.Property<string>("CompanyReviewLink")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "company_review_link");

                    b.Property<int?>("CompanyReviews")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "company_reviews");

                    b.Property<string>("Date")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "date");

                    b.Property<string>("JobLocation")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "job_location");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "job_title");

                    b.Property<string>("JobUrl")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "job_url");

                    b.Property<string>("MultipleHiring")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "multiple_hiring");

                    b.Property<string>("NextPage")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "next_page");

                    b.Property<int?>("PageNumber")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "page_number");

                    b.Property<int?>("Position")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "position");

                    b.Property<string>("Salary")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "salary");

                    b.Property<string>("UrgentlyHiring")
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "urgently_hiring");

                    b.HasKey("Id");

                    b.ToTable("Jobs");
                });
#pragma warning restore 612, 618
        }
    }
}
